" ==================================================
" Start Vundle
" ==================================================

" Set vim to be non-compatible to vi
set nocompatible
" Vundle setup
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" ==================================================
" Plugins
" ==================================================
" Let Vundle handle itself
Plugin 'gmarik/Vundle.vim'
" CtrlP for quick file search
Plugin 'kien/ctrlp.vim'
" EasyMotion, started with <Leader><Leader> allows to move by quick search end
" points
Plugin 'easymotion/vim-easymotion'
" Allow quick alignment to :, = etc.
Plugin 'godlygeek/tabular'
" EditorConfig
Plugin 'editorconfig/editorconfig-vim'
" Cool status bar
Plugin 'bling/vim-airline'
" Color parentheses in different colors for quick visual matching
Plugin 'kien/rainbow_parentheses.vim'
" Show indentation guides, start with <Leader>ig
Plugin 'nathanaelkane/vim-indent-guides'
" Scala
Plugin 'derekwyatt/vim-scala'
" Protobuffer
Plugin 'uarun/vim-protobuf'
" Switch between .c and .h
Plugin 'vim-scripts/a.vim'
" Multiple cursors like Sublime
Plugin 'terryma/vim-multiple-cursors'
" Git
Plugin 'tpope/vim-fugitive'
" Multiple searches at the same time with :Search
Plugin 'MultipleSearch'
" Gradle
Plugin 'tfnico/vim-gradle'
" Autocompletion!
"Plugin 'Valloric/YouCompleteMe'
" Rust plugin
Plugin 'wting/rust.vim'
Plugin 'cespare/vim-toml'

call vundle#end()

" ==================================================
" General Settings
" ==================================================

" Change the leader key to ,
let mapleader = ","

""" Some vim defaults everyone needs
" Use 256 Colors in Terminal
set t_Co=256
" allow mouse usage
set mouse=a
" Use fast terminal
set ttyfast
" Always show status line
set laststatus=2
" Use utf-8
set encoding=utf-8
" http://items.sjbach.com/319/configuring-vim-right
set hidden
" Avoid 'Press ENTER to continue ..'
set shortmess=atI
" Do not indent when pasting: press F11 before and again, afterwards
set pastetoggle=<F12>
" Store temporary files in a central spot
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
" This changes the behavior of the very useful . command to leave the cursor at the point where it was before editing started.
nmap . .`[
" Disable folding - I do not like it
set nofoldenable


" ==================================================
" Editing
" ==================================================
" use colorscheme
colorscheme fruidle
" Set how many lines of history VIM has to remember
set history=1000
" Show linenumbers
set number
" Highlight active line
set cursorline
" Autoindent code
set autoindent
" Only highlight n first characters of a line for performance reasons
set synmaxcol=300

" Map Ctrl-C and Ctrl-V
map <C-V> "+gP
cmap <C-V> <C-R>+
vnoremap <C-C> "+y

" Use four spaces for one tab
set tabstop=4
set shiftwidth=4
" Maintain more context around the cursor
set scrolloff=4
" Do not indent comments on next line.
autocmd BufNewFile,BufRead * setlocal formatoptions=tnq

" ==================================================
" File management
" ==================================================
" Auto reread new changes
set autoread
" automatically safe files when switching between them or when leaving vim
set autowriteall
autocmd FocusLost * silent! :wa
autocmd TabLeave * silent! :wa
" Automatically detect markdown files
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
" Automatically detect filetype
set filetype=on
filetype plugin on
filetype indent off
" Automaticall open new files on the right and below
set filetype=on
set splitright
set splitbelow


" ==================================================
" Search
" ==================================================
" Incremental search
set incsearch
" Highlight search
set hlsearch
" Show matches
set showmatch
" Intelligent searching
" If searching for an all-lowercase string search will be case-insensitive, but if one or more characters is uppercase search will be case-sensitive.
set ignorecase
set smartcase
" This gets rid of the distracting highlighting once I’ve found what I’m looking for.
nnoremap <leader><space> :noh<CR>


" ==================================================
" Useful commands
" ==================================================
" Add new line under current line when pressing enter in normal mode
nmap <CR> o<ESC>k
" Auto align :'s
map <leader>: :Tab /:\zs<CR>
map <leader>= :Tab /=<CR>

" ==================================================
" Rainbow Parenthesis Plugin
" ==================================================
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]
let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces


" ==================================================
" Prototxt Plugin
" ==================================================
augroup filetype
   au! BufRead,BufNewFile *.prototxt setfiletype proto
augroup end
" ==================================================
" Multicursor Plugin
" ==================================================
let g:multi_cursor_exit_from_visual_mode = 0
let g:multi_cursor_exit_from_insert_mode = 0
